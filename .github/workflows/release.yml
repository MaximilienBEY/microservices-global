name: Create Release

on:
  workflow_call:
    inputs:
      version:
        description: 'Release version'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        type: string

jobs:
  release:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.TOKEN }}
          fetch-depth: 2 
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      # Container build and release
      - name: Build and Release auth container
        run: |
          echo "Building and releasing auth container"
          docker build --platform=linux/amd64 . -f apps/auth/Dockerfile --no-cache -t maximilienbey/movie-app_auth:v${{ inputs.version }}
          docker push maximilienbey/movie-app_auth:v${{ inputs.version }}
      - name: Build and Release cinema container
        run: |
          echo "Building and releasing cinema container"
          docker build --platform=linux/amd64 . -f apps/cinema/Dockerfile --no-cache -t maximilienbey/movie-app_cinema:v${{ inputs.version }}
          docker push maximilienbey/movie-app_cinema:v${{ inputs.version }}
      - name: Build and Release movie container
        run: |
          echo "Building and releasing movie container"
          docker build --platform=linux/amd64 . -f apps/movie/Dockerfile --no-cache -t maximilienbey/movie-app_movie:v${{ inputs.version }}
          docker push maximilienbey/movie-app_movie:v${{ inputs.version }}
      - name: Build and Release reservation container
        run: |
          echo "Building and releasing reservation container"
          docker build --platform=linux/amd64 . -f apps/reservation/Dockerfile --no-cache -t maximilienbey/movie-app_reservation:v${{ inputs.version }}
          docker push maximilienbey/movie-app_reservation:v${{ inputs.version }}
      - name: Build and Release user container
        run: |
          echo "Building and releasing user container"
          docker build --platform=linux/amd64 . -f apps/user/Dockerfile --no-cache -t maximilienbey/movie-app_user:v${{ inputs.version }}
          docker push maximilienbey/movie-app_user:v${{ inputs.version }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ inputs.version }}
          release_name: Release ${{ inputs.version }}
          body: |
            This is a release for version ${{ inputs.version }}, which is automatically created by the release workflow.
            Release it to deploy the new version to the production environment.
          draft: true
          prerelease: false