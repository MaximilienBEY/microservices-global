name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.token }}
      - name: Use node 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
      - name: Install dependencies@
        run: pnpm install
      - name: Lint
        run: pnpm run lint:ci
      - name: Test
        run: pnpm run test
      - name: Check for version change
        id: version
        run: |
          git fetch --depth=2
          VERSION_OLD=$(git show HEAD^:./package.json | jq -r .version)
          VERSION_NEW=$(jq -r .version package.json)
          if [ "$VERSION_OLD" != "$VERSION_NEW" ]; then
            echo "VERSION_CHANGED=true" >> $GITHUB_ENV
            echo "::set-output name=version::$VERSION_NEW"
          else
            echo "VERSION_CHANGED=false" >> $GITHUB_ENV
          fi
        shell: bash
    outputs:
      version_changed: ${{ steps.version_check.outputs.version_changed }}
      version: ${{ steps.version_check.outputs.version }}

  call_release_workflow:
    needs: build
    if: ${{ needs.build.outputs.version_changed == 'true' }}
    uses: ./.github/workflows/release.yml
    with: 
      version: ${{ needs.build.outputs.version }}